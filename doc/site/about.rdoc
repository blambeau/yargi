_Yargi_ stands for Yet Another Ruby Graph Implementation (not really orignal). It is basically a
Directed Graph implementation, with a few algorithms (so far) and tools. The main features of
_Yargi_ are:

- Incident-list base implementation of the directed graph
- (Pseudo-)declarative selection of vertices and edges through predicates.
- Easy management of mutable graphs (bulk removal of vertices and edges, edge reconnection, 
  vertex and edge attributes management, etc.)
- Easy export to dot
  
_Yargi_ has not been designed for:

- Big graphs and efficiency

=== Example

  # inspect folders and build a simple graph
  graph = [...]              
  
  # a predicate that selects vertices corresponding to ruby files
  rubyfiles = Yargi.predicate{|v| /\.rb$/ =~ v.file}
  
  # Select-and-do pattern on .rb file
  graph.vertices(rubyfiles).add_marks(
    :shape => 'parallelogram', :fillcolor => 'blue4', :fontcolor => 'white'
  )
  
  # Select-and-do on parent folders
  graph.vertices(rubyfiles).in_adjacent.add_marks do |v|
    {:fillcolor => 'gold', :fontcolor => 'black'}
  end
  
  [...]
  
  # export to dot
  puts graph.to_dot
  

<center><img src=fs2dot.jpg width=650/></center>

=== Distribution

- _Yargi_ is freely available (under a MIT licence) as a 'yargi' gem on {rubyforge}[http://rubyforge.org/projects/yargi]. 
  Use 'gem install yargi' to install it. The rubyforge project is also the prefered place to
  discuss the project and report bugs and feature requests.
- The sources are on {github}[http://github.com/blambeau/yargi]. For the think there if you
  plan to contribute.
- The API documentation of the last stable version is {here}[http://code.chefbe.net/docs/yargi/stable-0.1.1/api]. 
  See also {chefbe.net}[http://code.chefbe.net] for previous versions and trunk.


=== Authors

_Yargi_ has been implemented by Bernard Lambeau, see {chefbe.net}[http://code.chefbe.net] for other open-source
libraries and {revision-zero}[http://www.revision-zero.org] for my blog.

=== Credits

This work is supported by the {department of computer science}[http://www.uclouvain.be/en-ingi.html] of the 
{University of Louvain}[http://www.uclouvain.be/en-index.html] (EPL/INGI, Universite Catholique de Louvain, 
UCL, Louvain-la-Neuve, Belgium).

This work was also partially supported by the Regional Government of Wallonia (GISELE project, RW Conv. 616425).
